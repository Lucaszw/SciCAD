environment:
  GIT_REPOSITORY: https://github.com/sci-bots/microdrop-3.0

  matrix:
    - PYTHON_VERSION: 2.7
      MINICONDA: C:\Miniconda
      PYTHON_ARCH: "32"
      nodejs_version: "8"

init:
  - ECHO %PYTHON_VERSION% %MINICONDA%

install:
  # Configure GIT:
  - cmd: git config --global user.email "build@sci-bots.com"
  - cmd: git config --global user.name "Sci-Bots Builds"
  - # Install Node/NPM
  - cmd: choco install nodejs
  - cmd: node --version
  - cmd: npm --version
  - # Configure NPM, and Publish
  - ps: '"//registry.npmjs.org/:_authToken=$env:npm_auth_token`n" | out-file "$env:userprofile\.npmrc" -Encoding ASCII'
  - cmd: npm whoami
  - ps: $previousVersion = "v$(npm show microdrop-3.0 version)"
  - ps: $newVersion = npm version patch
  - ps: >-
      if($newVersion -gt $previousVersion){
        npm publish .
      } ElseIf  ($newVersion -eq $previousVersion) {
        npm version patch
        npm publish .
      }
  - # Build Conda package
  - cmd: git clone https://github.com/Lucaszw/microdrop-3-conda-recipe
  - cmd: set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%
  - cmd: conda config --add channels sci-bots
  - cmd: powershell -executionpolicy remotesigned -File .\appveyor-conda-install.ps1
  - # Publish Conda Package
  - ps: $package_location = $(& cat PACKAGE_LOCATION).Trim();
  - ps: $build_status = $(& cat BUILD_STATUS).Trim();
  - ps: $package_name = (( $package_location -split '\\') | Select-Object -Last 1) -split '\.bz2' | Select-Object -First 1;
  - ps: binstar -t $($env:binstar_token) upload --force $($package_name+'.bz2');

build: false
test_script:
  - echo Build Complete
